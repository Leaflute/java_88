package test;
// 인터페이스
// - 인터페이스의 정의
// 강제성과 통일성을 지녔고 설계와 구현을 분리시켜
// 인터페이스 내에서 설계한 것을 자식클래스에서 구현한다.
// 객체 생성이 불가능하고 객체 타입으로는 적용할 수 있다.
// 멤버는 항상 상수이며, 추상메서드만 올 수 있다. 
// (final, static, abstract등의 예약어를 생략할 수 있다.)
// 다중상속이 가능하다.

// - 인터페이스의 문법
// 1-1 인터페이스 작성
//interface 인터페이스명 { 
//	데이터타입 상수 = 대입값;
//	반환형 추상메서드(매개변수);
//}
//1-2 인터페이스 구현
//class 클래스명 implements 인터페이스명 {
//	@Override
//	public 반환형 인터페이스에서 정의된 추상메서드(매개변수){
//	}
// }

public interface _16_Car {
	
	// 변수(상수) 선언
	// 추상메서드
	void startCar();
	void drive();
	void stop();
	void turnOff();
		
	// 템플릿 메서드		// 인터페이스는 추상메서드로만 구성되어야 하므로 
//	final void run(){	// 바디를 구현해야하는 템플릿 메서드 이용불가
//		startCar();
//		drive();
//		stop();
//		turnOff();
//	}
	
}